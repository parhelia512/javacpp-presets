// Targeted by JavaCPP version 1.5.12-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.ffmpeg.avutil;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.ffmpeg.global.avutil.*;


/**
 * This struct describes the properties of a side data type. Its instance
 * corresponding to a given type can be obtained from av_frame_side_data_desc().
 */
@Properties(inherit = org.bytedeco.ffmpeg.presets.avutil.class)
public class AVSideDataDescriptor extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public AVSideDataDescriptor() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public AVSideDataDescriptor(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AVSideDataDescriptor(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public AVSideDataDescriptor position(long position) {
        return (AVSideDataDescriptor)super.position(position);
    }
    @Override public AVSideDataDescriptor getPointer(long i) {
        return new AVSideDataDescriptor((Pointer)this).offsetAddress(i);
    }

    /**
     * Human-readable side data description.
     */
    public native @Cast("const char*") BytePointer name(); public native AVSideDataDescriptor name(BytePointer setter);

    /**
     * Side data property flags, a combination of AVSideDataProps values.
     */
    public native @Cast("unsigned") int props(); public native AVSideDataDescriptor props(int setter);
}
